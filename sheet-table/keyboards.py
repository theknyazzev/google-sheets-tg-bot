from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

class Keyboards:
    @staticmethod
    def create_main_menu():
        """–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        keyboard = [
           [KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é")],
            [KeyboardButton(text="üìä –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É –ø–æ –Ω–æ–º–µ—Ä—É")],
            [KeyboardButton(text="üìÑ –í—Å–µ —Å—Ç—Ä–æ–∫–∏")],
            [KeyboardButton(text="üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–±—Ü—ã")],
            [KeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É")],
            [KeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É")],
            [KeyboardButton(text="üßÆ –†–∞–±–æ—Ç–∞ —Å —Ñ–æ—Ä–º—É–ª–∞–º–∏")],
            [KeyboardButton(text="üìù –ü–æ–º–æ—â—å"), KeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ")]
        ]
        
        return ReplyKeyboardMarkup(
            keyboard=keyboard,
            resize_keyboard=True,
            one_time_keyboard=False,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
        )

    @staticmethod
    def create_row_selection_keyboard(found_rows):
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö"""
        keyboard = []
        
        for i, row_info in enumerate(found_rows[:10]):  # –ú–∞–∫—Å–∏–º—É–º 10 —Å—Ç—Ä–æ–∫
            row_number = row_info['row_number']
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è preview
            preview_data = ' - '.join([str(val)[:20] for val in row_info['data'][:3] if val])
            button_text = f"{i+1}. [{row_number}] {preview_data[:40]}..."
            
            keyboard.append([InlineKeyboardButton(
                text=button_text,
                callback_data=f"select_row:{row_number}"
            )])
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        keyboard.append([
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_search"
            ),
            InlineKeyboardButton(
                text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="back_to_menu"
            )
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def create_row_actions_keyboard(row_number):
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å–æ —Å—Ç—Ä–æ–∫–æ–π"""
        keyboard = [
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                    callback_data=f"edit_row:{row_number}"
                ),
                InlineKeyboardButton(
                    text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                    callback_data=f"refresh_row:{row_number}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∞",
                    callback_data="cancel_action"
                ),
                InlineKeyboardButton(
                    text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    callback_data="back_to_menu"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def create_edit_field_keyboard(row_number, columns):
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        keyboard = []
        
        for i, column_name in enumerate(columns[:10]):  # –ú–∞–∫—Å–∏–º—É–º 10 —Å—Ç–æ–ª–±—Ü–æ–≤
            if column_name:  # –¢–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤
                keyboard.append([InlineKeyboardButton(
                    text=f"‚úèÔ∏è {column_name}",
                    callback_data=f"edit_field:{row_number}:{i+1}"
                )])
        
        keyboard.append([
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"back_to_row:{row_number}"
            ),
            InlineKeyboardButton(
                text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="back_to_menu"
            )
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def create_confirm_keyboard(action_data):
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
        keyboard = [
            [
                InlineKeyboardButton(
                    text="‚úÖ –î–∞",
                    callback_data=f"confirm:{action_data}"
                ),
                InlineKeyboardButton(
                    text="‚ùå –ù–µ—Ç",
                    callback_data="cancel_action"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def create_main_menu():
        """–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        keyboard = [
            [KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é")],
            [KeyboardButton(text="üìä –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É –ø–æ –Ω–æ–º–µ—Ä—É")],
            [KeyboardButton(text="üìÑ –í—Å–µ —Å—Ç—Ä–æ–∫–∏")],
            [KeyboardButton(text="üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–±—Ü—ã")],
            [KeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É")],
            [KeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É")],
            [KeyboardButton(text="üßÆ –†–∞–±–æ—Ç–∞ —Å —Ñ–æ—Ä–º—É–ª–∞–º–∏")],
            [KeyboardButton(text="üìù –ü–æ–º–æ—â—å"), KeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ")]
        ]
        
        return ReplyKeyboardMarkup(
            keyboard=keyboard,
            resize_keyboard=True,
            one_time_keyboard=False,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
        )

    @staticmethod
    def create_search_menu():
        """–°–æ–∑–¥–∞—Ç—å –∏–Ω–ª–∞–π–Ω –º–µ–Ω—é –¥–ª—è –ø–æ–∏—Å–∫–∞"""
        keyboard = [
            [
                InlineKeyboardButton(
                    text="üîç –ü–æ–∏—Å–∫ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é",
                    callback_data="action:search"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìä –°—Ç—Ä–æ–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É",
                    callback_data="action:get_row"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–±—Ü—ã",
                    callback_data="action:show_columns"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É",
                    callback_data="action:edit_row"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìÑ –í—Å–µ —Å—Ç—Ä–æ–∫–∏",
                    callback_data="action:all_rows"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def create_back_to_menu_keyboard():
        """–°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é"""
        keyboard = [
            [InlineKeyboardButton(
                text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="back_to_menu"
            )]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def create_pagination_keyboard(current_page, total_pages, rows_on_page, prefix="page"):
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –ø–æ —Å—Ç—Ä–æ–∫–∞–º"""
        keyboard = []
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        for i, row_info in enumerate(rows_on_page):
            row_number = row_info['row_number']
            preview_data = ' - '.join([str(val)[:15] for val in row_info['data'][:2] if val])
            button_text = f"[{row_number}] {preview_data[:30]}..."
            
            keyboard.append([InlineKeyboardButton(
                text=button_text,
                callback_data=f"select_row:{row_number}"
            )])
        
        # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        nav_buttons = []
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if current_page > 1:
            nav_buttons.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è",
                callback_data=f"{prefix}:prev:{current_page}"
            ))
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        nav_buttons.append(InlineKeyboardButton(
            text=f"üìÑ {current_page}/{total_pages}",
            callback_data="page:info"
        ))
        
        # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
        if current_page < total_pages:
            nav_buttons.append(InlineKeyboardButton(
                text="‚û°Ô∏è",
                callback_data=f"{prefix}:next:{current_page}"
            ))
        
        if nav_buttons:
            keyboard.append(nav_buttons)
        
        # –ë—ã—Å—Ç—Ä–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è (–µ—Å–ª–∏ –º–Ω–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü)
        if total_pages > 3:
            quick_nav = []
            
            if current_page > 2:
                quick_nav.append(InlineKeyboardButton(
                    text="‚è™ –ù–∞—á–∞–ª–æ",
                    callback_data=f"{prefix}:goto:1"
                ))
            
            if current_page < total_pages - 1:
                quick_nav.append(InlineKeyboardButton(
                    text="–ö–æ–Ω–µ—Ü ‚è©",
                    callback_data=f"{prefix}:goto:{total_pages}"
                ))
            
            if quick_nav:
                keyboard.append(quick_nav)
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        keyboard.append([InlineKeyboardButton(
            text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="back_to_menu"
        )])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def create_new_row_keyboard(columns):
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏"""
        keyboard = []
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è
        for i, column_name in enumerate(columns[:10]):  # –ú–∞–∫—Å–∏–º—É–º 10 —Å—Ç–æ–ª–±—Ü–æ–≤
            if column_name:
                keyboard.append([InlineKeyboardButton(
                    text=f"‚ûï {column_name}",
                    callback_data=f"fill_field:new:{i+1}"
                )])
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        keyboard.append([
            InlineKeyboardButton(
                text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç—Ä–æ–∫—É",
                callback_data="save_new_row"
            ),
            InlineKeyboardButton(
                text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ",
                callback_data="clear_new_row"
            )
        ])
        
        keyboard.append([
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                callback_data="cancel_new_row"
            ),
            InlineKeyboardButton(
                text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="back_to_menu"
            )
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def create_formulas_menu():
        """–°–æ–∑–¥–∞—Ç—å –º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º—É–ª–∞–º–∏"""
        keyboard = [
            [
                InlineKeyboardButton(
                    text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É –≤ —è—á–µ–π–∫—É",
                    callback_data="formula:add"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üëÅÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ä–º—É–ª—É —è—á–µ–π–∫–∏",
                    callback_data="formula:view"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ñ–æ—Ä–º—É–ª",
                    callback_data="formula:help"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üßÆ –ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º—É–ª",
                    callback_data="formula:examples"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É",
                    callback_data="formula:validate"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    callback_data="back_to_menu"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def create_formula_examples_keyboard():
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ —Ñ–æ—Ä–º—É–ª"""
        keyboard = [
            [
                InlineKeyboardButton(
                    text="‚ûï –°—É–º–º–∞ (SUM)",
                    callback_data="example:sum"
                ),
                InlineKeyboardButton(
                    text="üìä –°—Ä–µ–¥–Ω–µ–µ (AVERAGE)",
                    callback_data="example:average"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìà –ü–æ–¥—Å—á–µ—Ç (COUNT)",
                    callback_data="example:count"
                ),
                InlineKeyboardButton(
                    text="üîç –ü–æ–∏—Å–∫ (VLOOKUP)",
                    callback_data="example:vlookup"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìÖ –î–∞—Ç–∞ (TODAY/NOW)",
                    callback_data="example:date"
                ),
                InlineKeyboardButton(
                    text="üî§ –¢–µ–∫—Å—Ç (CONCATENATE)",
                    callback_data="example:text"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùì –£—Å–ª–æ–≤–∏–µ (IF)",
                    callback_data="example:if"
                ),
                InlineKeyboardButton(
                    text="üî¢ –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ (ROUND)",
                    callback_data="example:round"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ñ–æ—Ä–º—É–ª–∞–º",
                    callback_data="back_to_formulas"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
